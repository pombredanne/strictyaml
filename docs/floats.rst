Floats
------

StrictYAML parses to a YAML object representing
a decimal, not the value directly to give you more
flexibility and control over what you can do with the
YAML.

This is what that can object can do - in many
cases if parsed as a decimal, it will behave in
the same way.

To get a python float object, use .data.

Parsing and validating as a Decimal is best for
values which require precision, but float is better
for values for which precision is not required.

.. code-block:: python

    from strictyaml import Map, Float, load
    
    schema = Map({"a": Float(), "b": Float()})

With variable 'valid_sequence':

.. code-block:: yaml

  a: 1.00000000000000000001
  b: 5.4135



.. code-block:: python

    load(valid_sequence, schema) == {"a": 1.0, "b": 5.4135}
    >>> True



.. code-block:: python

    str(load(valid_sequence, schema)["a"]) == "1.0"
    >>> True



.. code-block:: python

    float(load(valid_sequence, schema)["a"]) == 1.0
    >>> True



.. code-block:: python

    load(valid_sequence, schema)["a"] > 0
    >>> True



.. code-block:: python

    load(valid_sequence, schema)["a"] < 2
    >>> True



.. code-block:: python

    bool(load(valid_sequence, schema)['a'])
    >>> EXCEPTION RAISED:
      Cannot cast

With variable 'invalid_sequence':

.. code-block:: yaml

  a: string
  b: 2



.. code-block:: python

    load(invalid_sequence, schema)
    >>> EXCEPTION RAISED:
      when expecting a float
      found non-float
        in "<unicode string>", line 1, column 1:
          a: string
           ^

To just get an actual float, use .data

.. code-block:: python

    type(load(valid_sequence, schema)["a"].data) is float
    >>> True


Page automatically generated by hitchdoc from:
  hitch/float.story