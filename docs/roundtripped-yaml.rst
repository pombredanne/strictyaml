Roundtripped YAML
-----------------

Loaded YAML can be modified and dumped out again with
comments preserved using .as_yaml().

Note that due to some bugs in the library (ruamel.yaml)
underlying StrictYAML, while the data parsed should
be precisely the same, the exact syntax (newlines, comment
locations, etc.) may not be identical.

.. code-block:: python

    from strictyaml import Map, MapPattern, Str, Seq, Int, YAMLValidationError, load
    import difflib
    
    schema = Map({
        "a": Str(),
        "b": Map({"x": Int(), "y": Int()}),
        "c": Seq(MapPattern(Str(), Str())),
    })

With variable 'commented_yaml':

.. code-block:: yaml

  # Some comment
  
  a: â # value comment
  
  # Another comment
  b:
    x: 4
    y: 5
  c:
  - a: 1
  - b: 2



.. code-block:: python

    load(commented_yaml, schema).as_yaml() == commented_yaml
    >>> True

.. code-block:: python

    to_modify = load(commented_yaml, schema)
    
    to_modify['b']['x'] = 2
    to_modify['c'][0]['a'] = '3'



.. code-block:: python

    to_modify['b']['x'] = 'not an integer'
    >>> EXCEPTION RAISED:
      expected

With variable 'modified_commented_yaml':

.. code-block:: yaml

  # Some comment
  
  a: â # value comment
  
  # Another comment
  b:
    y: 5
    x: 2
  c:
  - a: 3
  - b: 2



.. code-block:: python

    to_modify.as_yaml() == modified_commented_yaml
    >>> True

With variable 'with_integer':

.. code-block:: yaml

  x: 1



.. code-block:: python

    load(with_integer, Map({"x": Int()})).as_yaml() == "x: 1\n"
    >>> True


Page automatically generated by hitchdoc from:
  hitch/roundtrip.story